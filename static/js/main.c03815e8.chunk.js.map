{"version":3,"sources":["app/images/coffee.JPG","app/images/bagel.JPG","app/images/wrap.JPG","app/images/donuts.JPG","app/images/timbits.JPG","app/images/pastries.JPG","serviceWorker.js","app/layout/Site.js","app/layout/Content.js","app/layout/Footer.js","blockchain/index.js","components/api.js","app/Video.js","app/NavBar.js","app/Home.js","app/Products.js","app/Gallery.js","app/RestoHome.js","app/CustomerHome2.js","app/layout/Router.js","app/Layout.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Site","styled","div","_templateObject","Content","Content_templateObject","Footer","react_default","a","createElement","className","BlockchainClient","Object","classCallCheck","this","ethereum","enable","provider","ethers","providers","Web3Provider","web3","currentProvider","signer","getSigner","dashboardContract","Contract","PublicEntryABI","restoUid","newStro","txHash","from","restoId","channelId","customerAddress","newCustomerRedemptionChannelId","console","log","hash","blockchainParam","stroStamping","value","customerId","nonce","amount","message","v","r","s","stroRedeem","newNonce","disputeRedemption","stroPay","newCustomerRedemptionChannel","getRestoUid","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","response","wrap","_context2","prev","next","fetch","method","mode","sent","json","abrupt","stop","apply","arguments","addNewResto","_ref3","_callee3","param","_context3","body","JSON","stringify","_x","addNewProduct","_ref4","_callee4","_context4","_x2","getProducts","_ref5","_callee5","_context5","concat","_x3","getCustomerUid","_ref6","_callee6","_context6","addNewCustomer","_ref7","_callee7","_context7","_x4","earnStamp","_ref8","_callee8","_context8","_x5","Video","ReactPlayer_default","url","playing","Component","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavBar","classes","AppBar","position","Toolbar","Typography","variant","blockchain","customStyles","content","top","left","right","bottom","transform","Home","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","registrationopen","signupopen","signinopen","redirect","result","handleClick","bind","assertThisInitialized","handleRegister","e","_this2","preventDefault","then","res","restouid","restoAddress","restoName","localStorage","setItem","setState","_this3","_this4","react_router","push","to","pathname","app_NavBar","class","app_Video","style","width","onClick","react_router_dom","exact","open","dist","show","onClose","alignment","type","name","required","activeClassName","Product","product","Card","CardContent","gutterBottom","component","productName","requiredPts","Gallery","catch","error","getItem","Grid","container","padding","map","currentProduct","item","xs","sm","lg","xl","Products","RestoHome","customeruid","earnedPts","handleChange","handleSubmit","handleNewCust","handleStamp","productParam","evt","defineProperty","target","customerUid","parseInt","_this5","onChange","is-primary","app_Gallery","CustomerHome","restaurantId","Router","path","CustomerHome2","Layout","_ref","children","layout_Site","layout_Content","layout_Router","layout_Footer","App","app_Layout","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c03815e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coffee.8674e3c5.JPG\";","module.exports = __webpack_public_path__ + \"static/media/bagel.c92ec00c.JPG\";","module.exports = __webpack_public_path__ + \"static/media/wrap.d73bfa7b.JPG\";","module.exports = __webpack_public_path__ + \"static/media/donuts.645a91a6.JPG\";","module.exports = __webpack_public_path__ + \"static/media/timbits.5d3d115d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/pastries.aaf96547.JPG\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from 'styled-components'\r\n\r\nconst Site = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n\tmin-height: 100vh;\r\n`\r\nexport default Site","import styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\n\tflex: 1;\r\n`\r\nexport default Content","import React from 'react'\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>\r\n          Developed for <strong>GBC dApp2</strong> course by Abiel Villarosa\r\n          <br />\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nexport default Footer","import { ethers } from 'ethers'\r\nimport PublicEntryABI from './abi/PublicEntry.json'\r\n\r\n\r\nexport default class BlockchainClient {\r\n\r\n    constructor(){\r\n        window.ethereum.enable()\r\n        this.provider = new ethers.providers.Web3Provider(window.web3.currentProvider)\r\n        this.signer = this.provider.getSigner()\r\n        // this.dashboardContract = new ethers.Contract(\"0xd6c2cbb9439d0fb901babc5403dc6eb6921e00a4\", PublicEntryABI, this.signer)\r\n        this.dashboardContract = new ethers.Contract(\"0x729d5f93149e8e03851015a67c5fcde799ebc487\", PublicEntryABI, this.signer)\r\n    }\r\n\r\n    async newStro(restoUid) {\r\n        let txHash = await this.dashboardContract.newStro(restoUid);\r\n        // console.log(txHash);\r\n        return txHash.from;\r\n    }\r\n\r\n    async newCustomerRedemptionChannelId(restoId, channelId, customerAddress) {\r\n        let txHash = await this.dashboardContract.newCustomerRedemptionChannelId(restoId, channelId, customerAddress);\r\n        console.log(txHash);\r\n        return txHash.hash;\r\n    }\r\n\r\n    async stroStamping(restoId, channelId, blockchainParam) {\r\n        let txHash = await this.dashboardContract.stroStamping(restoId, channelId, {value: blockchainParam});\r\n        console.log(txHash);\r\n        return txHash.hash;\r\n    }\r\n\r\n    async stroRedeem(customerId, channelId, nonce, amount, message, v, r, s) {\r\n        let txHash = await this.dashboardContract.stroRedeem(customerId, channelId, nonce, amount, message, v, r, s);\r\n        console.log(txHash);\r\n        return txHash.hash;\r\n    }\r\n\r\n    async disputeRedemption(customerId, channelId, newNonce, amount, message, v, r, s) {\r\n        let txHash = await this.dashboardContract.disputeRedemption(customerId, channelId, newNonce, amount, message, v, r, s);\r\n        console.log(txHash);\r\n        return txHash.hash;\r\n    }\r\n\r\n    async stroPay(customerId, channelId) {\r\n        let txHash = await this.dashboardContract.stroPay(customerId, channelId);\r\n        console.log(txHash);\r\n        return txHash.hash;\r\n    }\r\n\r\n    async newCustomerRedemptionChannel(customerId, customerAddress) {\r\n        let txHash = await this.dashboardContract.newCustomerRedemptionChannel(customerId, customerAddress);\r\n        console.log(txHash);\r\n        return txHash.hash;\r\n    }\r\n    \r\n}","export const getMedia = async () => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/getStro',{\r\n        method: \"get\",\r\n        mode: \"cors\",\r\n    })\r\n    const json = await response.json()\r\n    console.log(\"get Video\", json);\r\n    return json \r\n}\r\n\r\nexport const getRestoUid = async () => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/getRestoUid',{\r\n        method: \"get\",\r\n        mode: \"cors\",\r\n    })\r\n    const restoUid = await response.json()\r\n    console.log(\"get RestoUid\", restoUid);\r\n    return restoUid \r\n}\r\n\r\nexport const addNewResto = async (param) => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/addNewResto',{\r\n        method: \"post\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify(param)\r\n    })\r\n    const restoUid = await response.json()\r\n    console.log(\"get RestoUid\", restoUid);\r\n    return restoUid \r\n}\r\n\r\nexport const addNewProduct = async (param) => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/addNewProduct',{\r\n        method: \"post\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify(param)\r\n    })\r\n    const restoUid = await response.json()\r\n    console.log(\"get RestoUid\", restoUid);\r\n    return restoUid \r\n}\r\n\r\nexport const getProducts = async (param) => {\r\n    const response = await fetch(`http://localhost:5000/strodapp-backend/us-central1/getProducts?restoUid=${param}`,{\r\n        method: \"get\",\r\n        mode: \"cors\",\r\n        // body: JSON.stringify(param)\r\n    })\r\n    const json = await response.json()\r\n    console.log(\"get Products\", json);\r\n    return json \r\n}\r\n\r\n//Add from here\r\nexport const getCustomerUid = async () => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/getCustomerUid',{\r\n        method: \"get\",\r\n        mode: \"cors\",\r\n    })\r\n    const restoUid = await response.json()\r\n    console.log(\"get RestoUid\", restoUid);\r\n    return restoUid \r\n}\r\n\r\nexport const addNewCustomer = async (param) => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/addNewCustomer',{\r\n        method: \"post\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify(param)\r\n    })\r\n    const restoUid = await response.json()\r\n    console.log(\"get RestoUid\", restoUid);\r\n    return restoUid \r\n}\r\n\r\nexport const earnStamp = async (param) => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/earnStamp',{\r\n        method: \"put\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify(param)\r\n    })\r\n    const restoUid = await response.json()\r\n    console.log(\"get RestoUid\", restoUid);\r\n    return restoUid \r\n}\r\n\r\nexport const redeemPts = async (param) => {\r\n    const response = await fetch('http://localhost:5000/strodapp-backend/us-central1/redeemPts',{\r\n        method: \"put\",\r\n        mode: \"cors\",\r\n        body: JSON.stringify(param)\r\n    })\r\n    const restoUid = await response.json()\r\n    console.log(\"get RestoUid\", restoUid);\r\n    return restoUid \r\n}","import React, { Component } from 'react'\r\nimport ReactPlayer from 'react-player'\r\n \r\nclass Video extends Component {\r\n  render () {\r\n    return <ReactPlayer url='https://youtu.be/4wH878t78bw' playing />\r\n  }\r\n}\r\n\r\nexport default Video","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Stro\r\n            </Typography>\r\n            {/* <Button color=\"inherit\">Login</Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport { Modal } from 'react-bulma-components';\r\nimport BlockchainClient from '../blockchain';\r\nimport { getRestoUid, addNewResto } from '../components/api';\r\nimport Video from './Video';\r\nimport NavBar from './NavBar';\r\nimport { Typography, makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst blockchain = new BlockchainClient();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {registrationopen: false, signupopen: false, signinopen: false, restoUid: '', redirect: false, result : '', txHash : ''};\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n      }\r\n\r\n    // const styleclasses = useStyles();\r\n\r\n    handleRegister(e){\r\n        e.preventDefault()\r\n    \r\n        // let customerId = 1;\r\n        // let customerAddress = '0x10A21879783A76c20A70f4838dc18E01d0a1E8e7';\r\n        // blockchain.newCustomerRedemptionChannel(customerId, customerAddress).then( res => {\r\n        //   console.log(res);\r\n        //   this.setState({txHash : res});\r\n        // })\r\n      \r\n        getRestoUid().then(res => {\r\n          console.log('res', res.restouid);\r\n          let restouid = res.restouid\r\n          blockchain.newStro(res.restouid).then(res => {\r\n            console.log(res);\r\n            let restoName = 'bk'\r\n            let restoAddress = res\r\n            let param = {\r\n              \"restoUid\": restouid,\r\n              \"restoName\": restoName,\r\n              \"restoAddress\": restoAddress\r\n            }\r\n            addNewResto(param)\r\n            localStorage.setItem('restoUid', restouid);\r\n            localStorage.setItem('restoAddress', restoAddress);\r\n            this.setState({redirect: true, txHash :res, restoUid: restouid });\r\n          })\r\n        });\r\n\r\n        // blockchain.newStro().then(res => {\r\n        //   console.log(res);\r\n        //   this.setState({redirect: true, txHash :res });\r\n        // })\r\n    };\r\n\r\n    handleClick(e){\r\n        e.preventDefault()\r\n    \r\n        blockchain.newStro().then(res => {\r\n          console.log(res);\r\n          this.setState({redirect: true, txHash :res });\r\n        })\r\n      };\r\n\r\n\r\n\r\n    render () {\r\n      if (this.state.redirect) {\r\n        return <Redirect push to={{pathname: \"/strodApp/RestoHome\", state: {result: (this.state.restoUid)}}}/>;\r\n        // return <Redirect push to={{pathname: \"/strodApp/CustomerHome\"}}/>;\r\n        }\r\n\r\n    return (\r\n    <div>\r\n      <NavBar />\r\n    {/* <div class=\"columns is-mobile is-centered is-vcentered\"> */}\r\n    <div class=\"columns is-mobile\">\r\n          \r\n        {/* <section class=\"hero is-halfheight has-bg-img\">\r\n\r\n          <Modal show={this.state.signinopen} onClose={() => this.setState({ signinopen: false })} style={customStyles}>\r\n              <div class=\"modal-background\"></div>\r\n              <div class=\"modal-card\">\r\n          <section class=\"modal-card-body\">\r\n          <div>\r\n            <p class=\"modal-card-title\" alignment=\"center\">Verification</p>\r\n            <p>Enter your User ID and password.</p>\r\n            <br></br>\r\n            </div>\r\n                <form>\r\n                  <div className=\"field\">\r\n                      <label className=\"label\">User ID</label>\r\n                      <div className=\"control\">\r\n                        <input className=\"input\" type=\"text\" name=\"userId\" required />\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"field\">\r\n                      <label className=\"label\">Password</label>\r\n                      <div className=\"control\">\r\n                        <input className=\"input\" type=\"password\" name=\"password\" required />\r\n                      </div>\r\n                  </div>\r\n                </form>\r\n          </section>\r\n          <footer class=\"modal-card-foot\">\r\n            <NavLink className=\"navbar-item\" to=\"/swop-amadeus/postdetails\" activeClassName=\"is-active\" exact>\r\n              <button className=\"button is-block is-info is-fullwidth\" onClick={this.handleClick}>Submit</button>\r\n            </NavLink>\r\n            <button class=\"button\" onClick={() => this.setState({ open: false })}>Cancel</button>\r\n          </footer>\r\n                </div>\r\n          </Modal>\r\n          </section> */}\r\n\r\n        <div>\r\n          <Video />\r\n        </div>\r\n        <div>\r\n          <div class=\"headingtext\">\r\n          <Typography variant=\"h5\">\r\n              Save the turtles. \r\n              Save the Earth.\r\n          </Typography>\r\n          </div>\r\n          <span><a class=\"button is-black\" style={{width: 300}} onClick={() => this.setState({ registrationopen: true })}>Register as Restaurant</a></span>\r\n          <NavLink to=\"/strodApp/RestoHome\" exact>\r\n            <span><a class=\"button is-black\" style={{width: 300}} onClick={() => this.setState({ open: true })}>Restaurant Owner</a></span>\r\n          </NavLink>\r\n          <NavLink to=\"/strodApp/CustomerHome2\" exact>\r\n            <span><a class=\"button is-black\" style={{width: 300}} onClick={() => this.setState({ open: true })}>Customer</a></span>\r\n          </NavLink>\r\n        </div>\r\n        </div>\r\n        <Modal show={this.state.registrationopen} onClose={() => this.setState({ registrationopen: false })} style={customStyles}>\r\n              <div class=\"modal-background\"></div>\r\n              <div class=\"modal-card\">\r\n                <section class=\"modal-card-body\">\r\n                <div>\r\n                  <p class=\"modal-card-title\" alignment=\"center\">Sign Up</p>\r\n                  <p>Enter your Company Name.</p>\r\n                  <br></br>\r\n                  </div>\r\n                      <form>\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Company Name</label>\r\n                            <div className=\"control\">\r\n                              <input className=\"input\" type=\"text\" name=\"companyName\" required />\r\n                            </div>\r\n                        </div>\r\n                      </form>\r\n                </section>\r\n                <footer class=\"modal-card-foot\">\r\n                  <NavLink className=\"navbar-item\" to=\"/strodApp/RestoHome\" activeClassName=\"is-active\" exact>\r\n                    <button className=\"button is-block is-info is-fullwidth\" onClick={this.handleRegister}>Register</button>\r\n                  </NavLink>\r\n                  <button class=\"button\" onClick={() => this.setState({ registrationopen: false })}>Cancel</button>\r\n                </footer>\r\n              </div>\r\n          </Modal>\r\n\r\n        </div>\r\n\r\n    )\r\n}}\r\n    export default Home","import React from 'react'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\n// import { CardActions, CardMedia, Button } from '@material-ui/core'\r\n\r\nconst Product = (props) => {\r\n    return(\r\n        <div>\r\n          { props.product ? (\r\n                <Card>\r\n                    {/* <CardMedia style={{height: 0, paddingTop: '56.25%', size:\"small\"}}\r\n                        // image={props.course.fields.courseImage.fields.file.url}\r\n                        image=\"https://github.com/abielvillarosa/strodApp/blob/master/src/app/images/bagel.JPG?raw=true\"\r\n                        title={props.product.productName}\r\n                        /> */}\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h4\" component=\"h3\">\r\n                            {props.product.productName}\r\n                        </Typography>\r\n                        <Typography component=\"p\">\r\n                            Required Points: {props.product.requiredPts}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    {/* <CardActions>\r\n                        <Button size=\"small\" color=\"primary\" href={props.course.fields.url} target=\"_blank\">\r\n                        <Button size=\"small\" color=\"primary\" href=\"\" target=\"_blank\">\r\n                            Redeem\r\n                        </Button> \r\n                    </CardActions> */}\r\n                </Card>\r\n          ): null }  \r\n        </div>\r\n    )\r\n}\r\nexport default Product","import React, {Component} from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { getProducts } from '../components/api';\r\nimport Product from './Products'\r\n\r\nclass Gallery extends Component {\r\n    state = {\r\n        product: [], restoUid: ''\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n        this.getProducts()\r\n    }\r\n\r\n    componentDidMount() {\r\n        let restoUid = localStorage.getItem('restoUid');\r\n        this.setState({restoUid: restoUid})\r\n    }\r\n\r\n    getProducts = () => {\r\n        console.log('this.state.restoUid inside gallery', this.state.restoUid)\r\n        getProducts(this.state.restoUid)\r\n        // getProducts(98)\r\n        .then(response => {\r\n            // for(let i=0; i< response.length; i++){\r\n            //     console.log('inside array', response[i].productName);\r\n            //     let name = response[i].productName\r\n            //     this.setState({product: name})\r\n            // }\r\n            this.setState({product: response})\r\n            // console.log('inside getProducts', response)\r\n            // this.setState({products: response.productName})\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"Error occured while fetching data\")\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    // onSearchInputChange = (event) => {\r\n    //     if (event.target.value) {\r\n    //         this.setState({searchString: event.target.value})\r\n    //     } else {\r\n    //         this.setState({searchString: ''})\r\n    //     }\r\n    //     this.getCourses()\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"headingtext2\">\r\n                <Typography gutterBottom variant=\"h4\" component=\"h3\">\r\n                            Product Gallery\r\n                </Typography>\r\n                </div>\r\n                {this.state.product ? (\r\n                    <div>\r\n                        {/* <TextField style={{padding: 24}}\r\n                            id=\"searchInput\"\r\n                            placeholder=\"Search for Courses\"\r\n                            margin=\"normal\"\r\n                            onChange={this.onSearchInputChange} /> */}\r\n                        <Grid container spacing={20} style={{padding: 24}}>\r\n                            { this.state.product.map(currentProduct => (\r\n                                <Grid item xs={10} sm={6} lg={4} xl={2}>\r\n                                    <Product product={currentProduct} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </div>\r\n                ) : \"No products found\" }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Gallery;","import React, { Component } from 'react';\r\n// import { Button } from \"react-bulma-components/full\";\r\n// import { NavLink } from 'react-router-dom';\r\nimport { Modal } from 'react-bulma-components';\r\nimport BlockchainClient from '../blockchain';\r\nimport { addNewProduct, getProducts, getCustomerUid, addNewCustomer, earnStamp } from '../components/api';\r\nimport Gallery from './Gallery.js';\r\nimport NavBar from './NavBar';\r\n\r\nconst blockchain = new BlockchainClient();\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nclass RestoHome extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {open: false, redirect: false, result : '', txHash : '', restoUid: '', restoAddress: '', productName: '', requiredPts: 0, customeruid: 0, customerAddress: '', earnedPts: 0};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleNewCust = this.handleNewCust.bind(this);\r\n        this.handleStamp = this.handleStamp.bind(this);\r\n      }\r\n    \r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        let param = {\r\n            \"restoUid\": this.state.restoUid,\r\n            \"productName\": this.state.productName,\r\n            \"requiredPts\": this.state.requiredPts\r\n          }\r\n          addNewProduct(param).then(res => {\r\n            // let productParam = {\r\n            //     \"restoUid\": this.state.restoUid,\r\n            // }\r\n            let productParam = this.state.restoUid\r\n            // let productParam = 98\r\n            getProducts(productParam).then(res => {\r\n                console.log('getProducts', res)\r\n            });\r\n          })\r\n          this.setState({ open: false })\r\n          \r\n          \r\n    }\r\n\r\n    handleChange (evt) {\r\n        evt.preventDefault()\r\n        this.setState({ [evt.target.name]: evt.target.value });\r\n    }\r\n\r\n    handleNewCust(e) {\r\n        e.preventDefault()\r\n        getCustomerUid().then(res => {\r\n            console.log('res.customeruid', res.customeruid);\r\n            let restoUid = this.state.restoUid\r\n            let customerUid = res.customeruid\r\n            let customerAddress = this.state.customerAddress\r\n            blockchain.newCustomerRedemptionChannelId(restoUid, customerUid, customerAddress).then(res => {\r\n              console.log('blockchainres',res);\r\n              console.log('restoUid', restoUid)\r\n              console.log('customerUid', customerUid)\r\n              console.log('customerAddress', customerAddress)\r\n              this.setState({customeruid: customerUid})\r\n              let param = {\r\n                \"restoUid\": restoUid,\r\n                \"customerUid\": customerUid,\r\n                \"customerAddress\": customerAddress\r\n              }\r\n              addNewCustomer(param)\r\n            })\r\n        })\r\n    }\r\n\r\n    handleStamp(e) {\r\n        e.preventDefault()\r\n        let customerUid = this.state.customeruid\r\n            console.log('outside customerUid', customerUid)\r\n        getCustomerUid().then(res => {\r\n            // console.log('res.customeruid', res.customeruid);\r\n            let restoUid = this.state.restoUid\r\n            console.log('res restoUid', restoUid )\r\n            let restoAddress = this.state.restoAddress\r\n            // let customerUid = res.customeruid\r\n            let customerUid = this.state.customeruid\r\n            console.log('inside customerUid', customerUid)\r\n            let earnedPts = parseInt(this.state.earnedPts)\r\n            console.log('earnedPts', earnedPts)\r\n            // let blockchainParam = {\r\n            //     value: earnedPts,\r\n            //     from: restoAddress            \r\n            // }\r\n            blockchain.stroStamping(restoUid, customerUid, earnedPts).then(res => {\r\n              console.log('blockchainstampres',res);\r\n              let param = {\r\n                \"restoUid\": restoUid,\r\n                \"customerUid\": customerUid,\r\n                \"earnedPts\": earnedPts\r\n              }\r\n              earnStamp(param)\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let restoUid = localStorage.getItem('restoUid');\r\n        let restoAddress = localStorage.getItem('restoAddress');\r\n        this.setState({restoUid: restoUid, restoAddress: restoAddress})\r\n    }\r\n\r\n    render () {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div class=\"columns\">\r\n\r\n                <div>\r\n                    <div>\r\n                    Customer Address:\r\n                    <input className=\"input\" type=\"text\" name=\"customerAddress\" onChange={this.handleChange} required />\r\n                    <a class=\"button is-black\" style={{width: 150}} onClick={this.handleNewCust} is-primary>New Customer</a>\r\n                    <br />\r\n                    Required Points:\r\n                    <input className=\"input\" type=\"text\" name=\"earnedPts\" onChange={this.handleChange} required />\r\n                    <a class=\"button is-black\" style={{width: 150}} onClick={this.handleStamp}>Stamp</a>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"button2\">\r\n                    <span><a class=\"button is-black\" style={{width: 100}} onClick={() => this.setState({ open: true })}>Add Product</a></span>\r\n                    </div>\r\n                    <Gallery></Gallery>\r\n                </div>\r\n            </div>\r\n            <Modal show={this.state.open} onClose={() => this.setState({ open: false })} style={customStyles}>\r\n                <div class=\"modal-background\"></div>\r\n                <div class=\"modal-card\">\r\n            <section class=\"modal-card-body\">\r\n            <div>\r\n                <p class=\"modal-card-title\" alignment=\"center\">Add Product: </p>\r\n                <p>Enter your product details to add to the catalogue.</p>\r\n                <br></br>\r\n                </div>\r\n                    <form>\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Product Name</label>\r\n                        <div className=\"control\">\r\n                            <input className=\"input\" type=\"text\" name=\"productName\" onChange={this.handleChange} required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Required Points</label>\r\n                        <div className=\"control\">\r\n                            <input className=\"input\" type=\"number\" name=\"requiredPts\" onChange={this.handleChange} required />\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n            </section>\r\n            <footer class=\"modal-card-foot\">\r\n                {/* <NavLink className=\"navbar-item\" to=\"/swop-amadeus/postdetails\" activeClassName=\"is-active\" exact> */}\r\n                <button className=\"button is-block is-info is-fullwidth\" onClick={this.handleSubmit}>Submit</button>\r\n                {/* </NavLink> */}\r\n                <button class=\"button\" onClick={() => this.setState({ open: false })}>Cancel</button>\r\n            </footer>\r\n                    </div>\r\n            </Modal>\r\n        </div>\r\n    \r\n    )\r\n    }};\r\n\r\n    export default RestoHome;","import React, { Component } from 'react';\r\n// import { Button } from \"react-bulma-components/full\";\r\nimport { Box, Tile, Image, Heading } from \"react-bulma-components/full\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Modal } from 'react-bulma-components';\r\nimport coffee from './images/coffee.JPG';\r\nimport bagel from './images/bagel.JPG';\r\nimport wrap from './images/wrap.JPG';\r\nimport donuts from './images/donuts.JPG';\r\nimport timbits from './images/timbits.JPG';\r\nimport pastries from './images/pastries.JPG';\r\nimport BlockchainClient from '../blockchain';\r\nimport {getRestoUid} from '../components/api';\r\n\r\nimport Gallery from './Gallery.js';\r\nimport NavBar from './NavBar';\r\n\r\nconst blockchain = new BlockchainClient();\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nclass CustomerHome extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {open: false, restaurantId: '', redirect: false, result : '', txHash : ''};\r\n        this.handleClick = this.handleClick.bind(this);\r\n      }\r\n\r\n    handleClick(e){\r\n        e.preventDefault()\r\n    \r\n        // let customerId = 1;\r\n        // let customerAddress = '0x10A21879783A76c20A70f4838dc18E01d0a1E8e7';\r\n        // blockchain.newCustomerRedemptionChannel(customerId, customerAddress).then( res => {\r\n        //   console.log(res);\r\n        //   this.setState({txHash : res});\r\n        // })\r\n    \r\n        blockchain.stroRedeem().then(res => {\r\n          console.log(res);\r\n          this.setState({txHash :res });\r\n        })\r\n      };\r\n\r\n      componentDidMount() {\r\n        // getMedia();\r\n        getRestoUid().then(res => {\r\n          console.log('res', res.restouid);\r\n        });\r\n      }\r\n\r\n    render () {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <div class=\"columns\">\r\n                <Gallery></Gallery>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default CustomerHome;","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Home from './../Home'\r\nimport RestoHome from './../RestoHome'\r\nimport CustomerHome2 from './../CustomerHome2'\r\nimport Gallery from './../Gallery'\r\n// import PostDetails from './../PostDetails'\r\n\r\n\r\nconst Router = () => (\r\n  <Switch>\r\n    <Route exact path='/strodApp' component={Home}/>\r\n    <Route path='/strodApp/RestoHome' component={RestoHome}/>\r\n    <Route path='/strodApp/CustomerHome2' component={CustomerHome2}/>\r\n    <Route path='/strodApp/Gallery' component={Gallery}/>\r\n    {/* <Route path='/swop/swopbooking' component={SwopBooking}/>\r\n    <Route path='/swop/postdetails' render={(props) => <PostDetails {...props} isAuthed={true} />} component={PostDetails}/> */}\r\n  </Switch>\r\n)\r\nexport default Router","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Site from './layout/Site'\r\nimport Content from './layout/Content'\r\nimport Footer from './layout/Footer'\r\nimport Router from './layout/Router'\r\n\r\nconst Layout = ({ children }) => (\r\n  <Site>\r\n    <Content>\r\n      <Router />\r\n    </Content>\r\n    <Footer />\r\n  </Site>\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.func,\r\n}\r\n\r\nexport default Layout","import React, { Component } from 'react'\nimport Layout from './app/Layout'\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout />\n    );\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n), document.getElementById('root'))\nserviceWorker.unregister();\n"],"sourceRoot":""}